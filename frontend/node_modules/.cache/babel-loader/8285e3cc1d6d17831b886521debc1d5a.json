{"ast":null,"code":"var _jsxFileName = \"C:\\\\1TDSJ\\\\Responsive\\\\Demeter-GlobalSolucion\\\\src\\\\pages\\\\login\\\\cadastro\\\\PageRegistro.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, FormWrapper, FormHeader, FormBody, FormFieldset, FormInput, FormButton, FormLink } from \"../../../assets/style/StyledFormGlobal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registro() {\n  _s();\n\n  let id = \"\";\n  const [user, setUser] = useState({\n    id: id,\n    nome: \"\",\n    email: \"\",\n    senha: \"\"\n  });\n  const [status, setStatus] = useState({\n    type: \"\",\n    mensagem: \"\"\n  });\n\n  const valueInput = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  }; //Enviar os dados para o back-end\n\n\n  const addUser = async e => {\n    e.preventDefault();\n    if (!validate()) return;\n    const saveDataForm = true;\n    fetch(\"/rest/user/\" + id, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(() => {\n      window.location = \"/home\";\n    });\n\n    if (saveDataForm) {\n      setStatus({\n        type: \"success\",\n        mensagem: \"Usuário cadastrado com sucesso Bem vindo\"\n      });\n      setUser({\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      });\n    } else {\n      setStatus({\n        type: \"error\",\n        mensagem: \"Erro: Usuário não cadastrado!\"\n      });\n    }\n\n    const listaUser = JSON.parse(localStorage.getItem(\"listaUser\") || \"[]\");\n    const isLogado = JSON.parse(localStorage.getItem(\"isLogado\") || \"[]\");\n    listaUser.push({\n      name: user.nome,\n      email: user.email,\n      password: user.senha\n    });\n    isLogado.push({\n      logado: true\n    });\n    localStorage.setItem(\"listaUser\", JSON.stringify(listaUser));\n    localStorage.setItem(\"isLogado\", JSON.stringify(isLogado));\n  };\n\n  function validate() {\n    if (!user.nome) return setStatus({\n      type: \"error\",\n      mensagem: \"Erro: Necessário preencher o campo nome!\"\n    });\n    if (!user.email) return setStatus({\n      type: \"error\",\n      mensagem: \"Erro: Necessário preencher o campo e-mail!\"\n    });\n    if (!user.senha) return setStatus({\n      type: \"error\",\n      mensagem: \"Erro: Necessário preencher o campo senha!\"\n    });\n    if (user.senha.length < 6) return setStatus({\n      type: \"error\",\n      mensagem: \"Erro: A senha precisa ter pelo menos seis caracteres!\"\n    });\n    return true;\n  }\n\n  function someCadastrar() {\n    if (user.nome && user.email && user.senha && user.senha.length > 6) {\n      return document.getElementById(\"form\").style.visibility = \"hidden\", window.location.replace(\"/receita\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(FormBody, {\n      children: [/*#__PURE__*/_jsxDEV(FormHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cadastro Okoshi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), status.type === \"success\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#033d11\"\n        },\n        children: status.mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : \"\", status.type === \"error\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#ff0000\"\n        },\n        children: status.mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: addUser,\n        id: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(FormFieldset, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nome: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"text\",\n            name: \"nome\",\n            placeholder: \"Nome completo do usu\\xE1rio\",\n            onChange: valueInput,\n            value: user.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFieldset, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Melhor e-mail do usu\\xE1rio\",\n            onChange: valueInput,\n            value: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFieldset, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Senha: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"password\",\n            name: \"senha\",\n            placeholder: \"Senha para acessar o site\",\n            autoComplete: \"on\",\n            onChange: valueInput,\n            value: user.senha\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFieldset, {\n          children: /*#__PURE__*/_jsxDEV(FormButton, {\n            type: \"submit\",\n            onClick: () => someCadastrar(),\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormFieldset, {\n        children: /*#__PURE__*/_jsxDEV(FormLink, {\n          href: \"./login\",\n          children: \"J\\xE1 tem conta Clique aqui!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registro, \"SCb637xplYi3Pt8OTW97BeHxCk8=\");\n\n_c = Registro;\nexport default Registro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registro\");","map":{"version":3,"sources":["C:/1TDSJ/Responsive/Demeter-GlobalSolucion/src/pages/login/cadastro/PageRegistro.jsx"],"names":["React","useState","Form","FormWrapper","FormHeader","FormBody","FormFieldset","FormInput","FormButton","FormLink","Registro","id","user","setUser","nome","email","senha","status","setStatus","type","mensagem","valueInput","e","target","name","value","addUser","preventDefault","validate","saveDataForm","fetch","method","headers","body","JSON","stringify","then","window","location","password","listaUser","parse","localStorage","getItem","isLogado","push","logado","setItem","length","someCadastrar","document","getElementById","style","visibility","replace","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  FormWrapper,\r\n  FormHeader,\r\n  FormBody,\r\n  FormFieldset,\r\n  FormInput,\r\n  FormButton,\r\n  FormLink,\r\n} from \"../../../assets/style/StyledFormGlobal\";\r\n\r\nfunction Registro() {\r\n  let id = \"\";\r\n\r\n  const [user, setUser] = useState({\r\n    id: id,\r\n    nome: \"\",\r\n    email: \"\",\r\n    senha: \"\",\r\n  });\r\n\r\n  const [status, setStatus] = useState({\r\n    type: \"\",\r\n    mensagem: \"\",\r\n  });\r\n\r\n  const valueInput = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Enviar os dados para o back-end\r\n  const addUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validate()) return;\r\n\r\n    const saveDataForm = true;\r\n\r\n    fetch(\"/rest/user/\" + id, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then(() => {\r\n      window.location = \"/home\";\r\n    });\r\n\r\n    if (saveDataForm) {\r\n      setStatus({\r\n        type: \"success\",\r\n        mensagem: \"Usuário cadastrado com sucesso Bem vindo\",\r\n      });\r\n      setUser({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n    } else {\r\n      setStatus({\r\n        type: \"error\",\r\n        mensagem: \"Erro: Usuário não cadastrado!\",\r\n      });\r\n    }\r\n\r\n    const listaUser = JSON.parse(localStorage.getItem(\"listaUser\") || \"[]\");\r\n    const isLogado = JSON.parse(localStorage.getItem(\"isLogado\") || \"[]\");\r\n\r\n    listaUser.push({\r\n      name: user.nome,\r\n      email: user.email,\r\n      password: user.senha,\r\n    });\r\n\r\n    isLogado.push({\r\n      logado: true,\r\n    });\r\n\r\n    localStorage.setItem(\"listaUser\", JSON.stringify(listaUser));\r\n    localStorage.setItem(\"isLogado\", JSON.stringify(isLogado));\r\n  };\r\n\r\n  function validate() {\r\n    if (!user.nome)\r\n      return setStatus({\r\n        type: \"error\",\r\n        mensagem: \"Erro: Necessário preencher o campo nome!\",\r\n      });\r\n    if (!user.email)\r\n      return setStatus({\r\n        type: \"error\",\r\n        mensagem: \"Erro: Necessário preencher o campo e-mail!\",\r\n      });\r\n    if (!user.senha)\r\n      return setStatus({\r\n        type: \"error\",\r\n        mensagem: \"Erro: Necessário preencher o campo senha!\",\r\n      });\r\n    if (user.senha.length < 6)\r\n      return setStatus({\r\n        type: \"error\",\r\n        mensagem: \"Erro: A senha precisa ter pelo menos seis caracteres!\",\r\n      });\r\n\r\n    return true;\r\n  }\r\n\r\n  function someCadastrar() {\r\n    if (user.nome && user.email && user.senha && user.senha.length > 6) {\r\n      return (\r\n        (document.getElementById(\"form\").style.visibility = \"hidden\"),\r\n        window.location.replace(\"/receita\")\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <FormBody>\r\n        <FormHeader>\r\n          <h2>Cadastro Okoshi</h2>\r\n        </FormHeader>\r\n\r\n        {status.type === \"success\" ? (\r\n          <p style={{ color: \"#033d11\" }}>{status.mensagem}</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {status.type === \"error\" ? (\r\n          <p style={{ color: \"#ff0000\" }}>{status.mensagem}</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <Form onSubmit={addUser} id=\"form\">\r\n          <FormFieldset>\r\n            <label>Nome: </label>\r\n            <FormInput\r\n              type=\"text\"\r\n              name=\"nome\"\r\n              placeholder=\"Nome completo do usuário\"\r\n              onChange={valueInput}\r\n              value={user.nome}\r\n            />\r\n          </FormFieldset>\r\n\r\n          <FormFieldset>\r\n            <label>E-mail:</label>\r\n            <FormInput\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Melhor e-mail do usuário\"\r\n              onChange={valueInput}\r\n              value={user.email}\r\n            />\r\n          </FormFieldset>\r\n\r\n          <FormFieldset>\r\n            <label>Senha: </label>\r\n            <FormInput\r\n              type=\"password\"\r\n              name=\"senha\"\r\n              placeholder=\"Senha para acessar o site\"\r\n              autoComplete=\"on\"\r\n              onChange={valueInput}\r\n              value={user.senha}\r\n            />\r\n          </FormFieldset>\r\n\r\n          <FormFieldset>\r\n            <FormButton type=\"submit\" onClick={() => someCadastrar()}>\r\n              Cadastrar\r\n            </FormButton>\r\n          </FormFieldset>\r\n        </Form>\r\n\r\n        <FormFieldset>\r\n          <FormLink href=\"./login\">Já tem conta Clique aqui!</FormLink>\r\n        </FormFieldset>\r\n      </FormBody>\r\n    </FormWrapper>\r\n  );\r\n}\r\nexport default Registro;\r\n"]},"metadata":{},"sourceType":"module"}